# Generated by Django 3.0.10 on 2021-05-26 15:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AddLocations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, null=True, verbose_name='Location name')),
                ('num', models.CharField(max_length=120, null=True, verbose_name='Number')),
                ('authors', models.CharField(max_length=120, null=True, verbose_name='Authors')),
                ('longitude', models.CharField(max_length=120, null=True, verbose_name='Longitude')),
                ('latitude', models.CharField(max_length=120, null=True, verbose_name='Latitude')),
                ('photo', models.FileField(upload_to='pictures')),
                ('url_photo', models.CharField(max_length=120, null=True, verbose_name='URL photo')),
                ('url_page', models.CharField(max_length=120, null=True, verbose_name='URL page')),
                ('plots', models.CharField(max_length=120, null=True, verbose_name='Number of plots')),
                ('hint', models.CharField(max_length=120, null=True, verbose_name='Hint')),
            ],
            options={
                'verbose_name': 'Location',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('summary', models.TextField(blank=True, help_text='Enter a brief description of the book', max_length=1000)),
                ('specifications', models.FileField(upload_to='upload_datasets')),
                ('dataset', models.CharField(blank=True, max_length=200)),
                ('dataset_env', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(blank=True, choices=[('pu', 'Public'), ('pr', 'Private')], default='pr', help_text='Book availability', max_length=5)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='catalog.Author')),
            ],
            options={
                'verbose_name': 'Dataset',
            },
        ),
        migrations.CreateModel(
            name='FeedBack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='User name')),
                ('name_space', models.CharField(max_length=120, verbose_name='Location')),
                ('customer_login', models.CharField(blank=True, max_length=120, null=True, verbose_name='Login user')),
                ('organization', models.CharField(max_length=120, null=True, verbose_name='Organization')),
                ('position', models.CharField(max_length=120, null=True, verbose_name='Position')),
                ('email', models.EmailField(blank=True, max_length=120, null=True, verbose_name='Email')),
                ('status', models.CharField(blank=True, choices=[('o', 'Available'), ('m', 'Refused'), ('d', 'Waiting')], default='d', help_text='STATUS', max_length=1)),
                ('description', models.CharField(max_length=120, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Requests to access the dataset',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.CharField(blank=True, max_length=200, null=True)),
                ('position', models.CharField(blank=True, max_length=200, null=True)),
                ('photo', models.ImageField(blank=True, upload_to='users/%Y/%m/%d')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BookInstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this particular book across whole library', primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, choices=[('o', 'Available'), ('m', 'Wait')], default='m', help_text='Book availability', max_length=1)),
                ('book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='catalog.Book')),
                ('borrower', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Dataset instance',
                'ordering': ['book'],
            },
        ),
    ]
